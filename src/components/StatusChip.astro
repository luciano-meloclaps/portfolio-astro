---
// -----------------------------------------------------------------------------
// COMPONENTE DE UI ATÓMICO: StatusChip
// -----------------------------------------------------------------------------
// RESPONSABILIDAD:
// Mostrar una pieza de información de estado con una estética de "panel de vidrio".
// -----------------------------------------------------------------------------

// --- DEFINICIÓN DE TIPOS ---
type Variant = 'positive' | 'warning' | 'neutral' | 'active';

interface Props {
  // 2. Usamos el tipo global `astroHTML.JSX.Element` directamente.
  Icon: astroHTML.JSX.Element;
  label: string;
  value: string;
  variant?: Variant;
  class?: string;
}

// --- LÓGICA DEL COMPONENTE (FRONTMATTER) ---
const {
  Icon,
  label,
  value,
  variant = 'positive',
  class: className,
} = Astro.props;

const variantColorClasses: Record<Variant, { text: string; bg: string }> = {
  positive: { text: 'text-green-500', bg: 'bg-green-500' },
  warning: { text: 'text-amber-500', bg: 'bg-amber-500' },
  neutral: { text: 'text-gray-500', bg: 'bg-gray-500' },
  active: { text: 'text-cyan-500', bg: 'bg-cyan-500' },
};

const accentClasses = variantColorClasses[variant];
---

<!-- ESTRUCTURA DE PRESENTACIÓN (PLANTILLA) -->
<div
  class:list={[
    'border-border bg-panel/75 dark:bg-panel/50 inline-flex items-center justify-between gap-x-4 rounded-small border px-4 py-2 backdrop-blur-xl',
    'shadow-inset-light dark:shadow-inset-dark',
    className,
  ]}
>
  <!-- Contenido Principal: Icono y Texto -->
  <div class="flex items-center gap-x-3">
    <div class="text-sm">
      <Icon class:list={['icon-base', accentClasses.text]} strokeWidth={1.0} />
    </div>
    <div class="font-sans text-sm uppercase tracking-wider">
      <span class="font-bold text-text-secondary">{label}:</span>
      <span class="ml-1 font-normal text-text-primary">{value}</span>
    </div>
  </div>

  <!-- Indicador de Estado: Luz LED Palpitante -->
  <div class="led-container relative flex h-2 w-2 items-center justify-center">
    <span class:list={['absolute h-1.5 w-1.5 rounded-full', accentClasses.bg]}
    ></span>
    <span
      class:list={[
        'h-full w-full animate-ping rounded-full opacity-75',
        accentClasses.bg,
      ]}></span>
  </div>
</div>

<!-- ESTILOS ENCAPSULADOS -->
<style>
  @keyframes ping {
    75%,
    100% {
      transform: scale(2.5);
      opacity: 0;
    }
  }
  .animate-ping {
    animation: ping 1.5s cubic-bezier(0, 0, 0.2, 1) infinite;
  }
</style>
